{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.04357fad.chunk.js","sourcesContent":["import React from 'react' \r\nimport PropTypes from'prop-types';\r\n// import {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props){\r\n  \r\n    return(\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode=== 'light'?'secondary':'black'}`}>\r\n        <div className=\"container-fluid \">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                 <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> \r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n              </form> */}\r\n              <div className={`form-check form-switch text-${props.mode=== 'light' ?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string,\r\n                    aboutText: PropTypes.string}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props){\r\n   \r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\" Coverted to UpperCase\",\"success \");\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\" Coverted to LowerCase\",\"success \");\r\n    }\r\n    const handleClearClick = () => {\r\n        let newText ='';\r\n        setText(newText);\r\n        props.showAlert(\" Text Cleared\",\"success \");\r\n    }\r\n    const handleCopy = ()=> {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\" Text Copied\",\"success \");\r\n    }\r\n    const handleSpaces = () => {\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\" Spaces Removed\",\"success \");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n   \r\n    const [text,setText] = useState('');\r\n    return(\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark' ? 'white' : 'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style = {{backgroundColor:props.mode==='dark' ? 'gray' : 'white', color:props.mode==='dark' ? 'white' : 'black'}}></textarea>\r\n            </div>\r\n            <button className =\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert to UpperCase</button>\r\n            <button className =\"btn btn-primary mx-2\" onClick={handleLoClick} >Convert to LowerCase</button>\r\n            <button className =\"btn btn-primary mx-2\" onClick={handleClearClick} >Clear Text</button>\r\n            <button className =\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className =\"btn btn-primary mx-2\" onClick={handleSpaces}>Remove Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark' ? 'white' : 'black'}}>\r\n            <h2>Your Text Summary : </h2>\r\n            <p>{text.split(\" \").length}words,{text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length} Minutes used for read.</p>\r\n            <h4>Preview : </h4>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props){\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return(\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>   \r\n\r\n    )\r\n}\r\nexport default Alert","import './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport TextForm from './components/TextForm';\nimport React,{useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// }from \"react-router-dom\";\n  \n\n\nfunction App() {\n  const[mode, setMode]= useState('light');  //Whether dark mode is enable or not?\n  const[alert,setAlert]=useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#261373';\n      showAlert(\" Dark mode has been enabled.\",\"success \");\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\" Light mode has been enabled.\",\"success \");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-5\">\n    {/* <Routes>\n          <Route exact path=\"/about\" element={<About />} /> \n    <Route exact path=\"/\" element={ */} <TextForm showAlert={showAlert} heading = \"Enter the text to Analyze below :\" mode={mode}/>\n    {/* </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n// remove this for change the work of app---  <About/> \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}